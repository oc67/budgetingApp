Budgeting app
______________


Author: Oriol Corvo

Scope of the project:

This Django project features a personal budgeting app which I have built to strengthen my skills in APIs and Django. For personal learning only, it is not related to any employer or commercial business. 


Purpose of the project: 

This app is a personal budgeting tool built to improve my software development skills, particularly around APIs and Django. 


Features:

-Authentication and Authorisation: users can sign up and log in; only budget owners can access or modify their data.

-Budget ownership transfer: budgets can be securely transferred across users with authorisation checks.

-Role-based access control: users who created their budgets retain view-only permissions after transfering their budgets.

-REST API: exposes budget headers and lines to authenticated users.

-Third-party integrations: connects to a currency exchange API to convert and display budget figures in GBP, USD, and EUR.

-Notification menu with details of inbound/outbound budget transactions.

Exports: individual budgets can be exported to CSV for reporting purposes.

CRUD support: create, read, update, and delete monthly budgets with crispy forms.

Expense management: each expense line includes item name, category, quantity, and unit price.

Docker: containerised app to simulate production environment conditions.

Tech stack:

-Front end: HTML, CSS, and Javascript (for success messages).
-Framework: Django and Rest Framework.
-Database used: SQLite.


Roadmap:

=Stripe implementation for payment

-Deployment using Fly.io or Heruku

-Generation of frontend using React

-Implement audit trail feature

-Enhancing existing tests

-API scheme

-Supporting multiple-budget exports.

-The budget header and budget lines models will be expanded to include income lines.

-New and existing plots will be created. 

-Option to select time domain of budget plots.


Maintenance and contributions: 

Managed both by myself.
